/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package libraryapp;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author MSI
 */
public class Gui extends javax.swing.JFrame {
    private List<Book> books = new ArrayList<>();
    private List<Loan> loans = new ArrayList<>();
    private List<Student> Students = new ArrayList<>();

    public Gui() {
      initComponents();
      loadDataFromFileBooks();
      loadDataFromFileStudents();
      loadDataFromFileLoans();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        textyear = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        TextTitle = new javax.swing.JTextField();
        TextAuthor = new javax.swing.JTextField();
        TextGenre = new javax.swing.JTextField();
        TextVersion = new javax.swing.JTextField();
        Badd = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        textAid = new javax.swing.JTextField();
        textaadress = new javax.swing.JTextField();
        textday = new javax.swing.JTextField();
        textmonth = new javax.swing.JTextField();
        Textyear = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        textconnum = new javax.swing.JTextField();
        textconname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        textissueNo = new javax.swing.JTextField();
        Tday1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        Tmonth1 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        Tyear1 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        studentname = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        studentid = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        studentaddress = new javax.swing.JTextField();
        year = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        month = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        day = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        textmajor = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        BookTitleLoan = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        laonbutton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        Listbook2 = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        listStudent1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        IdStudentLoan = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        listloans = new javax.swing.JList<>();
        jScrollPane8 = new javax.swing.JScrollPane();
        arealoans = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        textloanchick = new javax.swing.JTextField();
        chickbutton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Listbook1 = new javax.swing.JList<>();
        Bsearch = new javax.swing.JButton();
        Textsearch = new javax.swing.JTextField();
        searchbyauthor = new javax.swing.JRadioButton();
        searchbyno = new javax.swing.JRadioButton();
        searchbytitle = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Add title");

        jLabel3.setText("Add author name");

        jLabel5.setText("Add genre");

        jLabel6.setText("Add version");

        TextTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextTitleActionPerformed(evt);
            }
        });

        TextAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextAuthorActionPerformed(evt);
            }
        });

        TextGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextGenreActionPerformed(evt);
            }
        });

        TextVersion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextVersionActionPerformed(evt);
            }
        });

        Badd.setText("Add book");
        Badd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BaddActionPerformed(evt);
            }
        });

        jLabel8.setText("author id");

        jLabel9.setText("author adress");

        jLabel10.setText("Add birthdate");

        jLabel11.setText("Month MM");

        jLabel12.setText("Year YYYY");

        jLabel13.setText("Day DD");

        textAid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textAidActionPerformed(evt);
            }
        });

        textaadress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textaadressActionPerformed(evt);
            }
        });

        textday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textdayActionPerformed(evt);
            }
        });

        Textyear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextyearActionPerformed(evt);
            }
        });

        jButton2.setText("Add juranle");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        textconnum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textconnumActionPerformed(evt);
            }
        });

        textconname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textconnameActionPerformed(evt);
            }
        });

        jLabel4.setText("Conference Number");

        jLabel17.setText("Conference Name");

        jLabel18.setText("Issue number");

        jLabel19.setText("release Date");

        Tday1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tday1ActionPerformed(evt);
            }
        });

        jLabel21.setText("Day DD");

        Tmonth1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tmonth1ActionPerformed(evt);
            }
        });

        jLabel22.setText("month MM");

        jLabel23.setText("Year YYYY");

        jButton4.setText("Add magazen");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout textyearLayout = new javax.swing.GroupLayout(textyear);
        textyear.setLayout(textyearLayout);
        textyearLayout.setHorizontalGroup(
            textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, textyearLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator3)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(textyearLayout.createSequentialGroup()
                        .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2)
                    .addComponent(jSeparator1)
                    .addGroup(textyearLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(textyearLayout.createSequentialGroup()
                                .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(30, 30, 30)
                                .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TextVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TextGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(textyearLayout.createSequentialGroup()
                                        .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textday, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TextAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(54, 54, 54)
                                        .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel11))
                                        .addGap(62, 62, 62)
                                        .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(textyearLayout.createSequentialGroup()
                                                .addComponent(textAid, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(textaadress, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(textyearLayout.createSequentialGroup()
                                                .addComponent(textmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel12)
                                                .addGap(42, 42, 42)
                                                .addComponent(Textyear, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(TextTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(textyearLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(Badd))))
                    .addGroup(textyearLayout.createSequentialGroup()
                        .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(textyearLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                                .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textconnum, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textconname, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34))
                            .addGroup(textyearLayout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textissueNo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(textyearLayout.createSequentialGroup()
                                .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton4)
                                    .addGroup(textyearLayout.createSequentialGroup()
                                        .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(textyearLayout.createSequentialGroup()
                                                .addGap(53, 53, 53)
                                                .addComponent(Tday1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel21))
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabel22)))
                                .addGap(24, 24, 24)
                                .addComponent(Tmonth1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jLabel23)
                                .addGap(39, 39, 39)
                                .addComponent(Tyear1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        textyearLayout.setVerticalGroup(
            textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(textyearLayout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TextTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TextAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(textAid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(textaadress, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(jLabel10)
                        .addComponent(jLabel13)
                        .addComponent(jLabel12)
                        .addComponent(Textyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(TextVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(Badd)
                .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(textyearLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(textissueNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(Tday1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)
                            .addComponent(Tmonth1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23)
                            .addComponent(Tyear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton4))
                    .addGroup(textyearLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(textyearLayout.createSequentialGroup()
                                .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(textconnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)
                                .addGroup(textyearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(textconname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addComponent(jButton2))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, 0))
        );

        jTabbedPane1.addTab("Add Book", textyear);

        studentname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentnameActionPerformed(evt);
            }
        });

        jLabel24.setText("Add Student ");

        jLabel31.setText("Student name ");

        jLabel32.setText("Student ID ");

        jLabel33.setText("Inter address ");

        jLabel35.setText("year");

        jLabel36.setText("month");

        jLabel37.setText("day");

        day.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayActionPerformed(evt);
            }
        });

        jLabel38.setText("Add birth date ");

        textmajor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textmajorActionPerformed(evt);
            }
        });

        jLabel39.setText("Add major");

        jButton1.setText("Add Student");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel38)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel39))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textmajor, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel37)
                        .addGap(164, 164, 164)
                        .addComponent(jLabel36)
                        .addGap(163, 163, 163)
                        .addComponent(jLabel35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(101, 101, 101)
                                .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton1)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(studentname, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel32)))
                                .addGap(18, 18, 18)
                                .addComponent(studentid, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel33)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(studentaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(200, 200, 200))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jLabel24)
                .addGap(29, 29, 29)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(studentid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33)
                    .addComponent(studentaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel37)
                    .addComponent(jLabel36)
                    .addComponent(jLabel35))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(day, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textmajor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(62, 62, 62)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Add Student", jPanel5);

        jLabel7.setText("Add loan");

        jLabel16.setText("Inter book title ");

        BookTitleLoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookTitleLoanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        laonbutton.setText("Add laon");
        laonbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laonbuttonActionPerformed(evt);
            }
        });

        Listbook2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Books", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        Listbook2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                Listbook2ValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(Listbook2);

        listStudent1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        listStudent1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listStudent1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listStudent1ValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(listStudent1);

        jLabel1.setText("Student ID");

        IdStudentLoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdStudentLoanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(78, 78, 78)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(BookTitleLoan, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                        .addComponent(IdStudentLoan))
                    .addGap(78, 78, 78)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(225, 225, 225))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(laonbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BookTitleLoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(IdStudentLoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(149, 149, 149)
                        .addComponent(laonbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jTabbedPane1.addTab("Add Loans", jPanel2);

        listloans.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Loans", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        listloans.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listloans.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listloansValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(listloans);

        arealoans.setColumns(20);
        arealoans.setRows(5);
        arealoans.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Loans details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jScrollPane8.setViewportView(arealoans);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chick loans", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel40.setText("Enter loan number ");

        chickbutton1.setText("chick");
        chickbutton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chickbutton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jLabel40))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(textloanchick, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(chickbutton1)))
                .addGap(65, 65, 65))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel40)
                .addGap(22, 22, 22)
                .addComponent(textloanchick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(chickbutton1)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Loan Status", jPanel4);

        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Listbook1.setBorder(javax.swing.BorderFactory.createTitledBorder("Books"));
        Listbook1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                Listbook1ValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(Listbook1);

        Bsearch.setText("Search");
        Bsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BsearchActionPerformed(evt);
            }
        });

        Textsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextsearchActionPerformed(evt);
            }
        });

        buttonGroup1.add(searchbyauthor);
        searchbyauthor.setText("Search by author");

        buttonGroup1.add(searchbyno);
        searchbyno.setText("Search by no ");

        buttonGroup1.add(searchbytitle);
        searchbytitle.setSelected(true);
        searchbytitle.setText("Search by title");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(searchbytitle)
                                .addGap(18, 18, 18)
                                .addComponent(searchbyno)
                                .addGap(16, 16, 16))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(Textsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Bsearch)
                            .addComponent(searchbyauthor)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(330, 330, 330))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Bsearch)
                            .addComponent(Textsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(searchbytitle)
                                .addGap(3, 3, 3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(searchbyno)
                                .addComponent(searchbyauthor)))
                        .addGap(76, 76, 76)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(122, 122, 122))
        );

        jTabbedPane1.addTab("Search Books", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean isValidDate(int year, int month, int day) {
    try {
        LocalDate.of(year, month, day);
        return true;
    } catch (DateTimeException e) {
        return false;
    }
}
    private void Listbook1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_Listbook1ValueChanged
     int Index = Listbook1.getSelectedIndex();
        if(Index != -1){
            JOptionPane.showMessageDialog(rootPane, books.get(Index).getinfo());

        }  
        
    }//GEN-LAST:event_Listbook1ValueChanged

    private void BsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BsearchActionPerformed

     if (Textsearch.equals("")) {
    JOptionPane.showMessageDialog(this, "Please fill in all the fields.");
     } else {
         try {
            if (searchbytitle.isSelected()) {
            String searchItem = Textsearch.getText();
            Book searchResults;
            searchResults = searchbyt(searchItem);
            if (searchResults != null) {
                JOptionPane.showMessageDialog(rootPane, searchResults.getinfo());
            }
        } else if (searchbyno.isSelected()) {
            int searchItem = Integer.parseInt(Textsearch.getText());
            Book searchResults;
            searchResults = searchbyn(searchItem);
            if (searchResults != null) {
                JOptionPane.showMessageDialog(rootPane, searchResults.getinfo());
            }
        } else if (searchbyauthor.isSelected()) {
            String searchItem = Textsearch.getText();
            Book searchResults;
            searchResults = searchbya(searchItem);
            if (searchResults != null) {
                JOptionPane.showMessageDialog(rootPane, searchResults.getinfo());
            }
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid input for number search. Please enter a valid number.");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage());
    } finally {
        Textsearch.setText("");
    }
}


    }//GEN-LAST:event_BsearchActionPerformed

    private void TextsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextsearchActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       
            if (textAid.getText().isEmpty() || TextAuthor.getText().isEmpty() || textaadress.getText().isEmpty() ||
                Textyear.getText().isEmpty() || textmonth.getText().isEmpty() || textday.getText().isEmpty() ||
                TextTitle.getText().isEmpty() || TextGenre.getText().isEmpty() || TextVersion.getText().isEmpty() ||
                textissueNo.getText().isEmpty() || Tyear1.getText().isEmpty() || Tmonth1.getText().isEmpty() || Tday1.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all the fields.");
            } else if(Integer.parseInt(Textyear.getText())<1900 || Integer.parseInt(Tyear1.getText())<1900){
                JOptionPane.showMessageDialog(this, "Enter vaild years above 1899");
            }else{
                try {
                int year = Integer.parseInt(Textyear.getText());
                int month = Integer.parseInt(textmonth.getText());
                int day = Integer.parseInt(textday.getText());

                int issueYear = Integer.parseInt(Tyear1.getText());
                int issueMonth = Integer.parseInt(Tmonth1.getText());
                int issueDay = Integer.parseInt(Tday1.getText());

                if (isValidDate(year, month, day) && isValidDate(issueYear, issueMonth, issueDay)) {
                      
           
                    boolean titleExists = checkExistBook(TextTitle.getText()); 
           
                    if (titleExists) {
                     JOptionPane.showMessageDialog(this, "The book title already exists in the list.\n Please enter a unique title.");
                    } else {
                    BookAuthor author = new BookAuthor(
                        Integer.parseInt(textAid.getText()),
                        TextAuthor.getText(),
                        textaadress.getText(),
                        new Date(year - 1900, month - 1, day)
                    );

                    Magazen newMagazen = new Magazen(
                        Integer.parseInt(textissueNo.getText()),
                        new Date(issueYear, issueMonth, issueDay),
                        TextTitle.getText(),
                        author,
                        TextGenre.getText(),
                        Integer.parseInt(TextVersion.getText()),
                        new Date()
                    );

                    books.add(newMagazen);
                    updateBooks();
                    SaveBooks();

                    TextTitle.setText("");
                    TextGenre.setText("");
                    textAid.setText("");
                    TextAuthor.setText("");
                    textaadress.setText("");
                    Textyear.setText("");
                    textmonth.setText("");
                    textday.setText("");
                    TextVersion.setText("");
                    Tyear1.setText("");
                    Tmonth1.setText("");
                    Tday1.setText("");
                    textissueNo.setText("");
                }
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid date. Please enter a valid date.");
                }
            } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid input for numbers. Please enter valid numeric values.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage());
        } 
            }
       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void Tmonth1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tmonth1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Tmonth1ActionPerformed

    private void Tday1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tday1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Tday1ActionPerformed

    private void textconnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textconnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textconnameActionPerformed

    private void textconnumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textconnumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textconnumActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     
            if (textAid.getText().isEmpty() || TextAuthor.getText().isEmpty() || textaadress.getText().isEmpty() ||
                Textyear.getText().isEmpty() || textmonth.getText().isEmpty() || textday.getText().isEmpty() ||
                TextTitle.getText().isEmpty() || TextGenre.getText().isEmpty() || TextVersion.getText().isEmpty() ||
                textconnum.getText().isEmpty() || textconname.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all the fields.");
            } else    
                 if(Integer.parseInt(Textyear.getText())<1900){
                     JOptionPane.showMessageDialog(this, "Enter vaild years above 1899");
                 }else{
                try {
                int year = Integer.parseInt(Textyear.getText());
                int month = Integer.parseInt(textmonth.getText());
                int day = Integer.parseInt(textday.getText());

                if (isValidDate(year, month, day)) {
                      
                    boolean titleExists = checkExistBook(TextTitle.getText()); 
          
                    if (titleExists) {
                        JOptionPane.showMessageDialog(this, "The book title already exists in the list.\n Please enter a unique title.");
                    } else {
                    BookAuthor author = new BookAuthor(
                        Integer.parseInt(textAid.getText()),
                        TextAuthor.getText(),
                        textaadress.getText(),
                        new Date(year - 1900, month - 1, day)
                    );

                    Juranle newJuranle = new Juranle(
                        Integer.parseInt(textconnum.getText()),
                        textconname.getText(),
                        TextTitle.getText(),
                        author,
                        TextGenre.getText(),
                        Integer.parseInt(TextVersion.getText()),
                        new Date()
                    );

                    books.add(newJuranle);
                    updateBooks();
                    SaveBooks();

                    TextTitle.setText("");
                    TextGenre.setText("");
                    textAid.setText("");
                    TextAuthor.setText("");
                    textaadress.setText("");
                    Textyear.setText("");
                    textmonth.setText("");
                    textday.setText("");
                    TextVersion.setText("");
                    textconnum.setText("");
                    textconname.setText("");
            }
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid date. Please enter a valid date.");
                }
          } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid input for numbers. Please enter valid numeric values.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage());
        }   
      }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void TextyearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextyearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextyearActionPerformed

    private void textdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textdayActionPerformed

    private void textaadressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textaadressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textaadressActionPerformed

    private void textAidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textAidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textAidActionPerformed

    private void BaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BaddActionPerformed
      if (textAid.getText().isEmpty() || TextAuthor.getText().isEmpty() || textaadress.getText().isEmpty() ||
        Textyear.getText().isEmpty() || textmonth.getText().isEmpty() || textday.getText().isEmpty() ||
        TextTitle.getText().isEmpty() || TextGenre.getText().isEmpty() || TextVersion.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please fill in all the fields.");
    } else if(Integer.parseInt(Textyear.getText())<1900){
        JOptionPane.showMessageDialog(this, "Enter vaild years above 1899");
    }else{
        try{
        if (isValidDate(Integer.parseInt(Textyear.getText()), Integer.parseInt(textmonth.getText()),Integer.parseInt(textday.getText()))) {
            boolean titleExists = checkExistBook(TextTitle.getText()); 

            if (titleExists) {
                JOptionPane.showMessageDialog(this, "The book title already exists in the list.\n Please enter a unique title.");
            } else {
                int year = Integer.parseInt(Textyear.getText());
                int month = Integer.parseInt(textmonth.getText());
                int day = Integer.parseInt(textday.getText());
                
                Date date = new Date(year - 1900, month - 1, day);

                BookAuthor author = new BookAuthor(
                    Integer.parseInt(textAid.getText()),
                    TextAuthor.getText(),
                    textaadress.getText(),
                    date
                );

                Book newBook = new Book(
                    TextTitle.getText(),
                    author,
                    TextGenre.getText(),
                    Integer.parseInt(TextVersion.getText()),
                    new Date()
                );
                books.add(newBook);
                updateBooks();
                SaveBooks();

                TextTitle.setText("");
                TextGenre.setText("");
                textAid.setText("");
                TextAuthor.setText("");
                textaadress.setText("");
                Textyear.setText("");
                textmonth.setText("");
                textday.setText("");
                TextVersion.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Invalid date. Please enter a valid date.");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please enter valid numbers for year, month, and day.");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage());
    }
}


    }//GEN-LAST:event_BaddActionPerformed

    private void TextVersionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextVersionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextVersionActionPerformed

    private void TextGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextGenreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextGenreActionPerformed

    private void TextAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextAuthorActionPerformed

    private void TextTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextTitleActionPerformed

    private void studentnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentnameActionPerformed

    private void dayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dayActionPerformed

    private void textmajorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textmajorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textmajorActionPerformed

    private void laonbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laonbuttonActionPerformed
        try {
            if (IdStudentLoan.getText().equals("") || BookTitleLoan.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Invalid: Fill in all fields");
            } else {

              
                   
                    int id = Integer.parseInt(IdStudentLoan.getText());
                    int i ;
                     Student student = null;
                    boolean studentfound = false;
                    for (i = 0; i < Students.size(); i++) {
                        if (Students.get(i).getId() == id){
                            studentfound = true ;
                            student = Students.get(i);
                            break;
                        }
                    }

                    if (!studentfound) {
                      JOptionPane.showMessageDialog(rootPane, "Student not exist");
                    } else {
                    Date currentDate = new Date();

                    Calendar calendar = Calendar.getInstance();
                    calendar.setTime(currentDate);
                    calendar.add(Calendar.DATE, 5);
                    Date dueDate = calendar.getTime();

                    String findbook = BookTitleLoan.getText();
                    Book b = searchbyt(findbook);

                    if (b == null) {
                        JOptionPane.showMessageDialog(rootPane, "Book title not found");
                    } else if (!b.isOnLoan()) {
                        if (Students.get(i).getNumLoans() < 3) {
                            loans.add(new Loan(b, student, dueDate));
                            b.setOnLoan(true);
                            Students.get(i).incrementNumLoans();
                            
                            SaveLoans();
                            updateLoans();
 
                            IdStudentLoan.setText("");
                            BookTitleLoan.setText("");

                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Student has already loaned 3 books.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Book on loan");
                    }
           
                    }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Invalid input: Please enter valid numeric values for date and ID.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "An unexpected error occurred: " + e.getMessage());
            e.printStackTrace(); // print the stack trace for debugging
        }
    }//GEN-LAST:event_laonbuttonActionPerformed

    private void BookTitleLoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookTitleLoanActionPerformed

    }//GEN-LAST:event_BookTitleLoanActionPerformed

    private void listStudent1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listStudent1ValueChanged
 int Index = listStudent1.getSelectedIndex();
        if(Index != -1){
        JOptionPane.showMessageDialog(this, Students.get(Index).getInfo());
        }       
    }//GEN-LAST:event_listStudent1ValueChanged

    private void Listbook2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_Listbook2ValueChanged
        boolean loanchick= true;
        int index= Listbook2.getSelectedIndex();
        if(index != -1){
        if(books.isEmpty()==false && loans.isEmpty()==false ){
            for (int i = 0; i < loans.size(); i++) {
                if(books.get(index)==loans.get(i).getBook()){
                    JOptionPane.showMessageDialog(rootPane, "in loan");
                    loanchick= false;
                    break;
                }
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "books or loans are epmty ");
        }
        if(loanchick){
            JOptionPane.showMessageDialog(rootPane,"is not in loan");
        }
        }
    }//GEN-LAST:event_Listbook2ValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       try {
            if(studentid.getText().equals("") || studentname.getText().equals("") || studentaddress.getText().equals("") || day.getText().equals("") ||
                month.getText().equals("") || year.getText().equals("") || textmajor.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Invalid: Fill in all fields");
            } else if(Integer.parseInt(year.getText())<1900){
                JOptionPane.showMessageDialog(this, "Enter vaild years above 1899");
            }else{
                int inputYear = Integer.parseInt(year.getText());
                int inputMonth = Integer.parseInt(month.getText());
                int inputDay = Integer.parseInt(day.getText());

                if (isValidDate(inputYear, inputMonth, inputDay)) {
                    Date date = new Date(inputYear - 1900, inputMonth - 1, inputDay);
                    int id = Integer.parseInt(studentid.getText());
                    Student student = null;
                    boolean studentfound = false;
                    int i ;

                    for (i = 0; i < Students.size(); i++) {
                        if (Students.get(i).getId() == id){
                            studentfound = true;
                            break;
                        }
                    }

                    if (!studentfound) {
                        student = new Student(
                            id,
                            studentname.getText(),
                            studentaddress.getText(),
                            date,
                            textmajor.getText()
                        );
                        Students.add(student);
                        updateStudents();
                        SaveStudents();
                        
                        studentid.setText("");
                        studentname.setText("");
                        studentaddress.setText("");
                        day.setText("");
                        month.setText("");
                        year.setText("");
                        textmajor.setText("");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Student Id exist");
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Invalid date. Please enter a valid date.");
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Invalid input: Please enter valid numeric values for date and ID. " + e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "An unexpected error occurred: " + e.getMessage());
            e.printStackTrace(); 
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void IdStudentLoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdStudentLoanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdStudentLoanActionPerformed

    private void listloansValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listloansValueChanged
          int Index = listloans.getSelectedIndex();
        if(Index != -1){
        arealoans.setText(loans.get(Index).getInfo());   
        }  
        
    }//GEN-LAST:event_listloansValueChanged

    private void chickbutton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chickbutton1ActionPerformed
    
        
        if(textloanchick.getText().equals("")){
          JOptionPane.showMessageDialog(this, "Please fill in all the fields.");
        }else{
        int chicknum = Integer.parseInt(textloanchick.getText());
        if(loans.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "there are no loans");
            textloanchick.setText("");
        }else if(chicknum < loans.size()&& chicknum >= 0){
            if(loans.get(chicknum).isOverdue()){
                      JOptionPane.showMessageDialog(rootPane,"is overdue" );
            }else{
            JOptionPane.showMessageDialog(rootPane,"is not overdue" );
            }
            }else{
        JOptionPane.showMessageDialog(rootPane, "no loans with this number");
        }
            textloanchick.setText("");
        }
        
    }//GEN-LAST:event_chickbutton1ActionPerformed
  
    private boolean checkExistBook(String newBookTitle){
    for (Book book : books){
            if(newBookTitle.equals(book.getTitle()) ){
                return true;
            }
        }
    return false;
    }
    
     private void updateStudents() {
    
        String[] StudentsNames = new String[Students.size()];
        for (int i = 0; i < Students.size(); i++) {
            StudentsNames[i] = Students.get(i).getName();
        }
        listStudent1.setListData(StudentsNames);
    }
     
    private void updateBooks() {
    
        String[] bookNames = new String[books.size()];
        for (int i = 0; i < books.size(); i++) {
            bookNames[i] = books.get(i).getTitle();
        }
        Listbook2.setListData(bookNames);
        Listbook1.setListData(bookNames);
    }
    
     private void updateLoans() {
    
        String[] loanNames = new String[loans.size()];
        for (int i = 0; i < loans.size(); i++) {
            loanNames[i] = "loan: "+ loans.get(i).getLoannum();
        }
        listloans.setListData(loanNames);
    }
   
    private void loadDataFromFileBooks() {
       try (
           BufferedReader reader = new BufferedReader(new FileReader("BooksData.txt"))) {
           String line;
           
            while ((line = reader.readLine()) != null) { 
                
                String[] data = line.split(",");
           
                if(data.length == 9 ){
                   Book loadedBook = new Book(line);
                   books.add(loadedBook);
                   continue;
                   
                }else if(data.length == 11 )
                {        
                    BookAuthor bookAuthor = new BookAuthor(
                    Integer.parseInt(data[3]),
                    data[4],
                    data[5],
                    new Date(data[6]) );
                    
                    Book loadedBook = new Juranle(Integer.parseInt(data[0]),data[1], data[2], bookAuthor, data[8], Integer.parseInt(data[9]), new Date(data[10]));
                    books.add(loadedBook);
                }else if(data.length == 12)
                {      
                    BookAuthor bookAuthor = new BookAuthor(
                    Integer.parseInt(data[3]),
                    data[4],
                    data[5],
                    new Date(data[6]) );
                    
                    Book loadedBook = new Magazen(Integer.parseInt(data[0]),new Date(data[1]), data[2], bookAuthor, data[8], Integer.parseInt(data[9]), new Date(data[10]));
                    books.add(loadedBook);
                }
             
                
            }
            updateBooks();
       } catch (FileNotFoundException e) {
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error loading data from file.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void loadDataFromFileLoans() {
       try (
           BufferedReader reader = new BufferedReader(new FileReader("LoansData.txt"))) {
           String line;
           
            while ((line = reader.readLine()) != null) { 
                String[] data = line.split(",");
                Book bookloan = null ;
                Student studentloan = null;
                for(Book book :books){
                if(Integer.parseInt(data[0]) == book.getNo()){
                    bookloan = book;
                }
                }
                for(Student student :Students){
                if(Integer.parseInt(data[1]) == student.getId()){
                    studentloan = student;
                    break;
                }
                }
                studentloan.incrementNumLoans();
               
                Loan loan = new Loan(bookloan, studentloan, new Date(data[2]));

                loans.add(loan);
            }
            updateLoans();
        } catch (FileNotFoundException e) {
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error loading data from file.", "Error", JOptionPane.ERROR_MESSAGE);
        }  
    }
        
     private void loadDataFromFileStudents() {
       try (
           BufferedReader reader = new BufferedReader(new FileReader("StudentsData.txt"))) {
           String line;
           
            while ((line = reader.readLine()) != null) { 
                String[] data = line.split(",");
        
                Student student = new Student(Integer.parseInt(
                        data[0]), 
                        data[1], 
                        data[2], 
                        new Date(data[3]), 
                        data[4]
                        );
                
                Students.add(student);
                updateStudents();
            }
            updateLoans();
        } catch (FileNotFoundException e) {
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error loading data from file.", "Error", JOptionPane.ERROR_MESSAGE);
        }
  
    }
     
    private void SaveBooks (){
          try (
               FileWriter fw = new FileWriter("BooksData.txt")) {
            for (Book book : books) {
                fw.write(book.toString() + System.lineSeparator());
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void SaveLoans (){
          try (
               FileWriter fw = new FileWriter("LoansData.txt")) {
            for (Loan loan : loans) {
                fw.write(loan.toString() + System.lineSeparator());
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
     private void SaveStudents(){
          try (
               FileWriter fw = new FileWriter("StudentsData.txt")) {
            for (Student student : Students) {
                fw.write(student.toString() + System.lineSeparator());
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    Book  searchbyt(String searchItem){
         
            Book searchResults=null ;
            if(books.isEmpty()){
            JOptionPane.showMessageDialog(this, "no books");
            }else{
                
                for (Book book : books ){              
                 if (book.getTitle().toLowerCase().equals(searchItem.toLowerCase())){
                    searchResults=book;
            }
                }
        
            }
            if(searchResults== null ){
                JOptionPane.showMessageDialog(this, "Book not found");
                return null;
            }else{
                return searchResults;
            }
          
           
    }
    
    Book  searchbyn(int searchItem){
         
             Book searchResults=null ;
            
            if(books.isEmpty()){
            JOptionPane.showMessageDialog(this, "no books");
            }else{
                
                for (Book book : books ){              
                 if (searchItem==book.getNo()){
                    searchResults=book;
            }
                }
        
            }
            if(searchResults== null){
                JOptionPane.showMessageDialog(this, "Book not found");
                return null;
            }else{
                return searchResults;
            }
          
           
    }
     Book  searchbya(String searchItem){
         
            Book searchResults=null ;
            if(books.isEmpty()){
            JOptionPane.showMessageDialog(this, "no Author");
            }else{
                
                for (Book book : books ){              
                 if (book.getAuthor().getName().toLowerCase().equals(searchItem.toLowerCase())){
                    searchResults=book;
            }
                }
        
            }
            if(searchResults== null){
                JOptionPane.showMessageDialog(this, "Book not found");
                return null;
            }else{
                return searchResults;
            }
           
    }
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Badd;
    private javax.swing.JTextField BookTitleLoan;
    private javax.swing.JButton Bsearch;
    private javax.swing.JTextField IdStudentLoan;
    private javax.swing.JList<String> Listbook1;
    private javax.swing.JList<String> Listbook2;
    private javax.swing.JTextField Tday1;
    private javax.swing.JTextField TextAuthor;
    private javax.swing.JTextField TextGenre;
    private javax.swing.JTextField TextTitle;
    private javax.swing.JTextField TextVersion;
    private javax.swing.JTextField Textsearch;
    private javax.swing.JTextField Textyear;
    private javax.swing.JTextField Tmonth1;
    private javax.swing.JTextField Tyear1;
    private javax.swing.JTextArea arealoans;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton chickbutton1;
    private javax.swing.JTextField day;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton laonbutton;
    private javax.swing.JList<String> listStudent1;
    private javax.swing.JList<String> listloans;
    private javax.swing.JTextField month;
    private javax.swing.JRadioButton searchbyauthor;
    private javax.swing.JRadioButton searchbyno;
    private javax.swing.JRadioButton searchbytitle;
    private javax.swing.JTextField studentaddress;
    private javax.swing.JTextField studentid;
    private javax.swing.JTextField studentname;
    private javax.swing.JTextField textAid;
    private javax.swing.JTextField textaadress;
    private javax.swing.JTextField textconname;
    private javax.swing.JTextField textconnum;
    private javax.swing.JTextField textday;
    private javax.swing.JTextField textissueNo;
    private javax.swing.JTextField textloanchick;
    private javax.swing.JTextField textmajor;
    private javax.swing.JTextField textmonth;
    private javax.swing.JPanel textyear;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables

}
